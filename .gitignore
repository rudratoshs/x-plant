<<<<<<< HEAD
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
=======
# ðŸ“„ File: .gitignore
#
# ðŸ§­ Purpose (Layman Explanation):
# Tells Git which files and folders to ignore when tracking changes,
# like a "do not disturb" list for files we don't want in version control.
#
# ðŸ§ª Purpose (Technical Summary):
# Git ignore patterns for Python applications, excluding sensitive data,
# build artifacts, dependency caches, and environment-specific files.
#
# ðŸ”— Dependencies:
# - Git version control system
# - Python development environment
# - Docker containerization tools
#
# ðŸ”„ Connected Modules / Calls From:
# - Git version control operations
# - Development environment setup
# - CI/CD pipeline file operations
# - Team collaboration workflows

# =============================================================================
# ENVIRONMENT & SECRETS
# =============================================================================
.env
.env.local
.env.*.local
*.key
*.pem
*.p8
secrets/
credentials/

# =============================================================================
# PYTHON
# =============================================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
>>>>>>> 0c31fee (Initial commit: Supabase + FastAPI + Celery + Redis setup)
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
<<<<<<< HEAD
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
=======
>>>>>>> 0c31fee (Initial commit: Supabase + FastAPI + Celery + Redis setup)
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
<<<<<<< HEAD
*.py.cover
=======
*.py,cover
>>>>>>> 0c31fee (Initial commit: Supabase + FastAPI + Celery + Redis setup)
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

<<<<<<< HEAD
# Django stuff:
*.log
=======
# Django stuff (if used)
>>>>>>> 0c31fee (Initial commit: Supabase + FastAPI + Celery + Redis setup)
local_settings.py
db.sqlite3
db.sqlite3-journal

<<<<<<< HEAD
# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
=======
# Flask stuff (if used)
instance/
.webassets-cache

# Scrapy stuff (if used)
>>>>>>> 0c31fee (Initial commit: Supabase + FastAPI + Celery + Redis setup)
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
<<<<<<< HEAD
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
=======
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pdm
.pdm.toml

# PEP 582
>>>>>>> 0c31fee (Initial commit: Supabase + FastAPI + Celery + Redis setup)
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
<<<<<<< HEAD
.env
.envrc
=======
>>>>>>> 0c31fee (Initial commit: Supabase + FastAPI + Celery + Redis setup)
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
<<<<<<< HEAD
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/

# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore 
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#  and can be added to the global gitignore or merged into this file. However, if you prefer, 
#  you could uncomment the following to ignore the entire vscode folder
# .vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Cursor
#  Cursor is an AI-powered code editor. `.cursorignore` specifies files/directories to
#  exclude from AI features like autocomplete and code analysis. Recommended for sensitive data
#  refer to https://docs.cursor.com/context/ignore-files
.cursorignore
.cursorindexingignore

# Marimo
marimo/_static/
marimo/_lsp/
__marimo__/
=======
.idea/

# =============================================================================
# FASTAPI & WEB FRAMEWORKS
# =============================================================================
# FastAPI static files
static/
media/
uploads/

# =============================================================================
# DATABASES
# =============================================================================
# SQLite databases
*.db
*.sqlite
*.sqlite3

# PostgreSQL dumps
*.sql
*.dump

# Database migrations (keep structure, ignore data)
migrations/data/

# =============================================================================
# DOCKER
# =============================================================================
# Docker volumes
docker-volumes/
.dockerignore.bak

# =============================================================================
# REDIS & CACHING
# =============================================================================
# Redis dumps
dump.rdb
appendonly.aof

# Cache directories
.cache/
cache/

# =============================================================================
# LOGS
# =============================================================================
logs/
*.log
log/

# =============================================================================
# OPERATING SYSTEM
# =============================================================================
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# EDITORS & IDEs
# =============================================================================
# VSCode
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
[._]*.s[a-v][a-z]
!*.svg
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
Session.vim
Sessionx.vim
.netrwhist
*~
tags
[._]*.un~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# JetBrains IDEs
.idea/
*.iws
*.iml
*.ipr
out/
.idea_modules/

# =============================================================================
# TESTING & CI/CD
# =============================================================================
# Test artifacts
.pytest_cache/
.coverage
htmlcov/
.nox/
.tox/

# =============================================================================
# MONITORING & ANALYTICS
# =============================================================================
# Monitoring data
monitoring/
metrics/

# =============================================================================
# TEMPORARY FILES
# =============================================================================
# Temporary directories
tmp/
temp/
.tmp/

# =============================================================================
# API KEYS & EXTERNAL SERVICES
# =============================================================================
# Supabase
.supabase/

# Vercel
.vercel

# Netlify
.netlify

# =============================================================================
# MACHINE LEARNING & AI
# =============================================================================
# Model files
*.model
*.pkl
*.pickle
models/
checkpoints/

# Jupyter notebooks checkpoints
.ipynb_checkpoints/

# =============================================================================
# BACKUP FILES
# =============================================================================
*.bak
*.backup
*.old
*.orig
backup/
backups/

# =============================================================================
# COMPRESSION & ARCHIVES
# =============================================================================
*.zip
*.tar.gz
*.rar
*.7z

# =============================================================================
# CUSTOM PROJECT IGNORES
# =============================================================================
# Plant Care specific ignores

# Uploaded plant images (during development)
uploads/plants/
uploads/temp/

# Generated plant identification cache
plant_cache/

# Weather data cache
weather_cache/

# AI model cache
ai_cache/

# Translation files cache
translations_cache/

# Admin panel build files (if separate)
admin_panel/dist/
admin_panel/build/

# API documentation generated files
api_docs/

# Performance test results
performance_tests/
load_tests/

# Local configuration overrides
local_config/
dev_overrides/
>>>>>>> 0c31fee (Initial commit: Supabase + FastAPI + Celery + Redis setup)
